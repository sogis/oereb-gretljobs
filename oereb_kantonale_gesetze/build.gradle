import ch.so.agi.gretl.api.TransferSet
import ch.so.agi.gretl.tasks.*
import java.nio.file.Paths
import de.undercouch.gradle.tasks.download.Download

apply plugin: "de.undercouch.download"
apply plugin: "ch.so.agi.gretl"


defaultTasks "importCantonalLegalBasis"


def dbSchemas = ["stage","live"]

def iliModelVorschriften = "OeREBKRMvs_V1_1"

def cantonalLegalBasisBaseUrl = "https://geo.so.ch/geodata/ch.so.sk.gesetze.oereb/"
def cantonalLegalBaseDataSet = "ch.so.sk.gesetze"

def pathToTempFolder = System.getProperty("java.io.tmpdir")


task downloadCantonalLegalBasis(type: Download) {
    description = "Download kantonale Gesetze ($cantonalLegalBaseDataSet)."
    src cantonalLegalBasisBaseUrl + cantonalLegalBaseDataSet + ".xtf"
    dest pathToTempFolder
    overwrite true    
}

dbSchemas.each { dbSchema ->
    task "importCantonalLegalBasis_$dbSchema"(type: Ili2pgReplace, dependsOn: 'downloadCantonalLegalBasis') {
        description = "Import kantonale Gesetze ($cantonalLegalBaseDataSet)."
        database = [dbUriOereb, dbUserOereb, dbPwdOereb]
        models = iliModelVorschriften
        dbschema = "$dbSchema"
        dataFile = file(Paths.get(pathToTempFolder.toString(), cantonalLegalBaseDataSet + ".xtf"))
        dataset = cantonalLegalBaseDataSet 
        disableValidation = true
    }
}

task importCantonalLegalBasis() {
    doLast {
        println "Cantonal legal basis data is imported."
    }
}

importCantonalLegalBasis.dependsOn {
    tasks.findAll { task -> task.name.startsWith('importCantonalLegalBasis_') }
}
