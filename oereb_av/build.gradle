import ch.so.agi.gretl.api.*
import ch.so.agi.gretl.tasks.*
import java.nio.file.Paths
import de.undercouch.gradle.tasks.download.Download

apply plugin: "ch.so.agi.gretl"
apply plugin: "de.undercouch.download"

defaultTasks "importAV"

def GROUP = "avimport"
//def dbSchemas = ["stage","live"]
def dbSchemas = ["stage"]


//AV import from edit db
dbSchemas.each { dbSchema ->
    task transferAV_$dbSchema(type: Db2Db){
        description = "DatenÃ¼bertrag ins AV-Bundesodell."    
        group = GROUP
        sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
        targetDb = [dbUriOereb, dbUserOereb, dbPwdOereb]
        transferSets = [
            new TransferSet("select_av_dataset_entries.sql", dbSchema + ".t_ili2db_dataset", false),
            new TransferSet("select_av_basket_entries.sql", dbSchema + ".t_ili2db_basket", false),
            new TransferSet("select_gemeindegrenzen_gemnachfuehrung.sql", dbSchema + ".dm01vch24lv95dgemeindegrenzen_gemnachfuehrung", true),
            new TransferSet("select_gemeindegrenzen_gemeinde.sql", dbSchema + ".dm01vch24lv95dgemeindegrenzen_gemeinde", true),
            new TransferSet("select_gemeindegrenzen_gemeindegrenze.sql", dbSchema + ".dm01vch24lv95dgemeindegrenzen_gemeindegrenze", true),
            new TransferSet("select_liegenschaften_lsnachfuehrung.sql", dbSchema + ".dm01vch24lv95dliegenschaften_lsnachfuehrung", true),
            new TransferSet("select_liegenschaften_grundstueck.sql", dbSchema + ".dm01vch24lv95dliegenschaften_grundstueck", true),
            new TransferSet("select_liegenschaften_liegenschaft.sql", dbSchema + ".dm01vch24lv95dliegenschaften_liegenschaft", true),
            new TransferSet("select_gebaeudeadressen_gebnachfuehrung.sql", dbSchema + ".dm01vch24lv95dgebaeudeadressen_gebnachfuehrung", true),
            new TransferSet("select_gebaeudeadressen_lokalisation.sql", dbSchema + ".dm01vch24lv95dgebaeudeadressen_lokalisation", true),
            new TransferSet("select_gebaeudeadressen_lokalisationsname.sql", dbSchema + ".dm01vch24lv95dgebaeudeadressen_lokalisationsname", true),
            new TransferSet("select_gebaeudeadressen_gebaeudeeingang.sql", dbSchema + ".dm01vch24lv95dgebaeudeadressen_gebaeudeeingang", true)
        ];        
    }
}

// this task is the main task to be started
task importAV() {
    description = "Aggregationstask."
    group = GROUP
    doLast {
        println "AV data imported."
    }
}

// finds all tasks from the each loop and sets them as dependants
importAV.dependsOn {
    tasks.findAll { task -> task.name.startsWith('transferAV_') }
}
