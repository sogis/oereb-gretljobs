import ch.so.agi.gretl.api.*
import ch.so.agi.gretl.tasks.*
import java.nio.file.Paths
import de.undercouch.gradle.tasks.download.Download

apply plugin: "ch.so.agi.gretl"
apply plugin: "de.undercouch.download"

defaultTasks "transferStageToLive"

def GROUP = "oereb-annex_data-transfer"
def pathToTempFolder = System.getProperty("java.io.tmpdir")
def annexModel = "OeREB_ExtractAnnex_V1_0"
def xtfFile = "ch.so.agi.OeREB_extractAnnex.xtf"

task "updateAVImportDate"(type: SqlExecutor){
    description = "Update des AV-Import Datums per Gemeinde"
    group = GROUP
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlFiles = ["update_avimportdate_in_annex_model.sql"]
}

//OEREB-Annex-Export
task "exportAnnexData"(type: Ili2pgExport, dependsOn: "updateAVImportDate") {
    description = "Export of the OEREB Annex Data from editdb into INTERLIS-File $xtfFile"
    group = GROUP
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    models = annexModel
    dbschema = "agi_oereb_annex"
    dataFile = "$rootDir/" + "$xtfFile"
    disableValidation = false
}

task "importAnnexDataStage"(type: Ili2pgReplace, dependsOn: "exportAnnexData"){
    description = "Import Annex Data into Schema stage with dataset $xtfFile"
    group = GROUP
    database = [dbUriOereb, dbUserOereb, dbPwdOereb]
    dataset = "ch.so.agi.OeREB_extractAnnex_stage"
    models = annexModel
    dbschema = "stage"
    dataFile = "$rootDir/" + "$xtfFile"
    disableValidation = false
}

task "syncDatasetsAndBaskets"(type: SqlExecutor, dependsOn: "importAnnexDataStage"){
    description = "Synchronization of dataset and basket tables"
    group = GROUP
    database = [dbUriOereb, dbUserOereb, dbPwdOereb]
    sqlFiles = ["synchronize_dataset_and_baskets_stage-live.sql"]
}

task "transferStageToLive"(type: SqlExecutor, dependsOn: "syncDatasetsAndBaskets"){
    description = "Transfer of OEREB annex tables stage to live schema without theme codelist"
    group = GROUP
    database = [dbUriOereb, dbUserOereb, dbPwdOereb]
    sqlFiles = ["transferStageToLive.sql"]
}



